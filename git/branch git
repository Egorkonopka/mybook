одна ветка - одна задача

посмотреть текущую ветку
    $git branch
    $git branch -v (рас. версия + последний коммит)
    или
    $git status
    
согздать ветку 
    $git branch <название ветки>
    
переключиться на ветку
    $git checkout <название ветки>

никогда не делать коммит если работа еще не закончена 

нельзя переключиться между ветками пока в текущей ветке есть не комичены обьекты
но когда работа не закончена и необходимо срочно сделать другу работу в новой ветке ---->
можно спрятать изменения
    $git stash
    
посмотреть спрятаные части кода
    git shash list

поскольку у нас есть основная ветка (мастер) с коротой и обновляется программа на продакшене
все изменения, которые были выполнены в других ветках должны быть слиты в мастер
для этого 1) переходим на ветку МАСТЕР
    $git ckeckout master
          2) сливаем изменения с вветки, в которой работали
    $git merge <ветка в которой работали>
    
после того как срочные фиксы были выполнены и слиты в масте, можно вернуться на ветку основных разработок
и продалжить работу, но так как мы спрятали не комиченые измененя , что бы экстренно переместить на другу ветку
изменения необходимо достать из <stash>
    $git stash pop
    
!! возвращая данные из STASH . он возвращает данные в ткущую ветку HEAD и не важно в какой ветке вы находились,
когда прятали их !!

"конфликт слияний" получаеться когда в одном (в одной и тойже строке) и том же фале произошли измениня в разных ветках
 
 если же просто была не правильно указана ветка для слияния, то есть возможность отменить слияние
    $git merge --abort
    
<<<<<<<<<HEAD 
код, который был в основной ветке 
============
код, который в сливаемой ветке 
>>>>>>>>> <название ветки>

После разверешения кофлика необходиом сделать комить котоый зафиксирует результат
комиты , которые длаються в мастер ветке после слияния или решения конфликта, желательно
записывать с соотфетсвующим коментарием 

