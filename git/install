команда для Debian дистрибутивов (например убунту)
    $ sudo apt install git
    
посмотреть версию ГИТ 
    $ git version

посмотреть все настройки ГИТ
    $ git config --list
    
Инициализация проэкта, что бы для него работала система контроля версий
добавляем проет в ГИТ 
    $git init    
    
указать имя и адрес електронной почты пользователя 
    git config --global user.name "egor" //имя
        
        //--global означает, что данные настройки будут пременены ко всем проэкрам
        // тоесть глобально

    git config --global user.mail "egorkonopka93@gmail.com" //почта
    
удалить какой-то параметр (что бы изменить)
    $git config --unset-all --global user.email //удалить Емейл
    


    
    КАЖДЫЙ ФАЙЛ В РАБОЧЕМ КАТАЛОГЕ МОЖЕТ НАЪОДИТЬСЯ В 2-Х СОСТОЯНИЯХ (под версионным контролем "отслеживаемый") И ("неотслеживаемый")
    
для того что бы узнать в каком состоянии находяться файлы 
    $git status
    
только созданые файлы нходяться в состоянии "неотслеживаемый" и гит просто не будет его видеть
для того что бы добавить его под версионный контроль
    $git add <file> //<file> название файла который необходимо добавить

    $git rm --cached <файл>…», чтобы убрать из индекса
    
после этой команты файл будет отслеживаемый но для того что это состояние гит запомнил
необходимо выполнить команду
    $git commit -m "коментарий"
        //необходимо придумать коментарий, который отображает выполненную работу
        
посмотреть историю коммитов
    $git log
    
Файл находиться в системе контроля версий , тоесть он был добавлен через $git add 
и после был изменен то он перейдет в другое состояние Modifaid (рис 1)

Внесение изменений в пердыдущий коммит 
    //бывает что находяться ошибки, который замечаешь когда файлы добавлены в стейдж (адд) и сделан коммит(commit) , либо просто забыл написать коментарий
    //но делать новый коммит нельзя или не хочеться
    $git add .(так же снова добавить измения в стейдж)
    $git commit --amend -m "коментарий"
    $git commit --amend --no-edit  //не изменяя коментарий предыдущего коммита
    
Отмена подготовки (стейдж стояний -add)
    $git reset HEAD <файл>
    
Отмена измений (файл должен находиться в состоянии Modifaid) тоесть файл был изменен но не добавлен в стейдж (отмена стйджа - см. предыдущий пункт )
    git checkout -- <frontend/views/site/index.php> //название файла
        
Игнорирование файло
    Файлы логов и медифайлы польвотелей не должны попадать в систему контроля версий
    поэтому гит предлает добавлять их в файл с названием .gitignore
        необходимо просто добавить назание файла , а если это директоря в конце постать (/)
            acces.log - файл
            media/ - директоря
            *.php - все файлы с расширение  php
            
    
    

    
